# Generates and uploads new Plonk artifacts to S3 when  and manual release
# On `push`, the version/file name is the commit hash
# Use `workflow_dispatch` for Sphinx releases, with manually specified version name
name: Update Plonk artifacts in S3

on:
  push:
    branches: dev
  workflow_dispatch:
    inputs:
      version:
        description: "Artifact version used for archive name, e.g. v1.0.0-testnet"
        type: string
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  update-plonk-artifacts:
    name: Update Plonk artifacts
    runs-on: warp-ubuntu-latest-x64-32x
    steps:
      - uses: actions/checkout@v4
        with:
          repository: argumentcomputer/ci-workflows
      - uses: ./.github/actions/ci-env
      - uses: actions/checkout@v4
      - name: Setup CI
        uses: ./.github/actions/setup
        with:
          pull_token: ${{ secrets.REPO_TOKEN }}
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.S3_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.S3_SECRET_KEY }}
          aws-region: us-east-2
      - name: Check for existing artifacts
        id: check-s3
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            VERSION=$(grep -r "const SPHINX_CIRCUIT_VERSION" core/src/lib.rs | awk -F '"' '{print $2}')
          else
            VERSION=${{ inputs.version }}
          fi

          BUCKET_NAME="sphinx-plonk-params"

          FILE=$(aws s3 ls "s3://${BUCKET_NAME}/${VERSION}.tar.gz")

          if [[ -n "$FILE" ]]; then
            echo "File ${VERSION}.tar.gz exists in $BUCKET_NAME"
            echo "needs-update=false" | tee -a $GITHUB_OUTPUT
          else
            echo "needs-update=true" | tee -a $GITHUB_OUTPUT
          fi

          echo "VERSION=$VERSION" | tee -a $GITHUB_ENV
      - name: Generate Plonk artifacts
        if: ${{ steps.check-s3.outputs.needs-update == "true" }}
        run: |
          make build-plonk-bn254
        working-directory: ${{ github.workspace }}/prover
      - name: Release tarball on S3
        if: ${{ steps.check-s3.outputs.needs-update == "true" }}
        run: |
          echo "${{ env.VERSION }}" | make release-plonk-bn254
        working-directory: ${{ github.workspace }}/prover
