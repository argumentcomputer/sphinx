name: Tests

on:
  push:
    branches: [main, dev]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  test:
    name: CI Test Suite
    runs-on: warp-ubuntu-latest-x64-32x
    steps:
      - uses: actions/checkout@v4
        with:
          repository: lurk-lab/ci-workflows
      - uses: ./.github/actions/ci-env
      - uses: actions/checkout@v4
      - name: Setup CI
        uses: ./.github/actions/setup
        with:
          pull_token: ${{ secrets.REPO_TOKEN }}
      - name: Run cargo test on sphinx except the test_e2e_prove_groth16 recursion test
        run: |
          cargo nextest run --cargo-profile dev-ci --profile ci --workspace -E 'all() - test(test_e2e_prove_groth16)'
      - name: Run cargo test with no default features
        run: |
          cargo nextest run -p sphinx-core --cargo-profile dev-ci --profile ci --no-default-features --features debug -- cpu::trace::tests::generate_trace
        working-directory: ${{ github.workspace }}/examples
      - name: Install `cargo prove` CLI
        run: |
          cargo install --locked --force --path ./cli
          cargo prove install-toolchain
        working-directory: ${{ github.workspace }}

  test-recursion-circuit:
    name: Test recursion circuit
    runs-on: warp-ubuntu-latest-x64-32x
    steps:
      - uses: actions/checkout@v4
        with:
          repository: lurk-lab/ci-workflows
      - uses: ./.github/actions/ci-env
      - uses: actions/checkout@v4
      - name: Setup CI
        uses: ./.github/actions/setup
        with:
          pull_token: ${{ secrets.PRIVATE_PULL_TOEKN }}
      - name: Run cargo test on the recursion circuit
        run: |
          cargo nextest run --cargo-profile dev-ci --profile ci -p sphinx-recursion-circuit

  clippy:
    runs-on: warp-ubuntu-latest-x64-16x
    steps:
      - uses: actions/checkout@v4
        with:
          repository: lurk-lab/ci-workflows
      - uses: ./.github/actions/ci-env
      - uses: actions/checkout@v4
      - name: Setup CI
        uses: ./.github/actions/setup
        with:
          pull_token: ${{ secrets.REPO_TOKEN }}
      - name: Check Rustfmt Code Style
        run: cargo fmt --all --check
      - name: check *everything* compiles
        run: cargo check --all-targets --all-features --all --examples --tests --benches
      # See '.cargo/config' for list of enabled/disabled clippy lints
      - name: Check clippy warnings
        run: cargo xclippy -D warnings
      - name: Doctests
        run: cargo test --doc --workspace
      - name: Cargo-deny
        uses: EmbarkStudios/cargo-deny-action@v1

  integration-tests-examples:
    name: Build integration tests and examples
    runs-on: warp-ubuntu-latest-x64-32x
    steps:
      - uses: actions/checkout@v4
        with:
          repository: lurk-lab/ci-workflows
      - uses: ./.github/actions/ci-env
      - uses: actions/checkout@v4
      - name: Setup CI
        uses: ./.github/actions/setup
        with:
          pull_token: ${{ secrets.REPO_TOKEN }}
          perf: false
      - name: Install `cargo prove` CLI
        run: |
          cargo install --locked --force --path ./cli
          cargo prove install-toolchain
        working-directory: ${{ github.workspace }}
      - name: Check examples
        run: |
          for i in $(find ./ -maxdepth 1 -mindepth 1 -type d); do
            cd "$i/script"
            cargo check
            cd ../../
          done
        working-directory: ${{ github.workspace }}/examples
      - name: Check integration tests
        run: |
          for i in $(find ./ -maxdepth 1 -mindepth 1 -type d); do
            cd "$i"
            cargo check
            cd ../
          done
        working-directory: ${{ github.workspace }}/tests
      - name: Run cargo prove new
        run: |
          cargo prove new cargo-prove-test
          cd cargo-prove-test/program
          cat << EOF | tee -a Cargo.toml

          [patch.'ssh://git@github.com/lurk-lab/sphinx.git']
          sphinx-zkvm = { path = "../../zkvm/entrypoint" }
          EOF
          cd ../..

          cd cargo-prove-test/script
          cat << EOF | tee -a Cargo.toml

          [patch.'ssh://git@github.com/lurk-lab/sphinx.git']
          sphinx-sdk = { path = "../../sdk" }
          sphinx-helper = { path = "../../helper" }
          EOF
          cargo run --release

  mac-m1:
    name: CI Tests on OSX ARM
    runs-on: warp-macos-latest-arm64-6x
    if: github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v4
        with:
          repository: lurk-lab/ci-workflows
      - uses: ./.github/actions/ci-env
      - uses: actions/checkout@v4
      - name: Setup CI
        uses: ./.github/actions/setup
        with:
          pull_token: ${{ secrets.REPO_TOKEN }}
      - name: Install `cargo prove` CLI
        run: |
          cargo install --locked --force --path ./cli
          cargo prove install-toolchain
        working-directory: ${{ github.workspace }}
      - name: Run cargo test on sphinx except the prove_sp1 recursion test
        run: |
          cargo nextest run --cargo-profile dev-ci --profile ci -E 'all() - test(test_e2e_prove_groth16)'
      - name: Run cargo test with no default features
        run: |
          cargo nextest run -p sphinx-core --cargo-profile dev-ci --profile ci --no-default-features --features debug -- cpu::trace::tests::generate_trace
      - name: check examples compile
        run: |
          for i in $(find ./ -maxdepth 1 -mindepth 1 -type d); do
            cd "$i/script"
            cargo check
            cd ../../
          done
        working-directory: ${{ github.workspace }}/examples
      - name: Set env
        if: failure()
        run: |
          echo "WORKFLOW_URL=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" | tee -a $GITHUB_ENV
      - name: Open an issue on failure
        if: failure()
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_COMMIT: ${{ github.sha }}
          WORKFLOW_URL: ${{ env.WORKFLOW_URL }}
        with:
          filename: .github/templates/M1_MAC.md

  check-aptos-lc-compiles:
    runs-on: warp-ubuntu-latest-x64-16x
    steps:
      - uses: actions/checkout@v4
        with:
          repository: lurk-lab/ci-workflows
          path: ci-workflows
      - uses: ./ci-workflows/.github/actions/ci-env
      - uses: ./ci-workflows/.github/actions/install-deps
        with:
          packages: "pkg-config libudev-dev"
      - name: Set env
        run: |
          echo "DOWNSTREAM_REPO=$(echo "wormhole-foundation/example-zk-light-clients-internal" | awk -F'/' '{ print $2 }')" | tee -a $GITHUB_ENV
          echo "UPSTREAM_REPO=$(echo "lurk-lab/sphinx" | awk -F'/' '{ print $2 }')" | tee -a $GITHUB_ENV
      - uses: actions/checkout@v4
        with:
          path: ${{ github.workspace }}/${{ env.UPSTREAM_REPO }}
          submodules: recursive
      - name: Setup CI
        uses: ./sphinx/.github/actions/setup
        with:
          pull_token: ${{ secrets.REPO_TOKEN }}
          perf: false
      - name: Install cargo prove
        run: |
          cargo install --locked --path ./cli
          cargo prove install-toolchain
        working-directory: ${{ github.workspace }}/${{ env.UPSTREAM_REPO }}
      - uses: actions/checkout@v4
        with:
          repository: "wormhole-foundation/${{ env.DOWNSTREAM_REPO }}"
          path: ${{ github.workspace }}/${{ env.DOWNSTREAM_REPO }}
          token: ${{ secrets.REPO_TOKEN }}
          submodules: recursive
      - uses: ./ci-workflows/.github/actions/check-downstream-compiles
        with:
          upstream-path: "${{ env.UPSTREAM_REPO }}"
          downstream-path: "${{ env.DOWNSTREAM_REPO }}/aptos"
          patch-ssh: true
